
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>org.ks</groupId>
  <artifactId>frogger-reincarnation</artifactId>
  <version>1.0-SNAPSHOT</version>
  <packaging>jar</packaging>

  <name>frogger-reincarnation</name>
  <url>http://maven.apache.org</url>
  <build>
        
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>2.3.2</version>
        <configuration>
          <source>1.6</source>
          <target>1.6</target>
        </configuration>
      </plugin>
            
      <plugin>
        <artifactId>maven-jar-plugin</artifactId>
        <configuration>
          <archive>
            <manifest>
              <addClasspath>true</addClasspath>
              <classpathPrefix>lib/</classpathPrefix>
              <mainClass>org.jboss.weld.environment.se.StartMain</mainClass>
            </manifest>
          </archive>
        </configuration>
      </plugin>
            
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-dependency-plugin</artifactId>
        <version>2.4</version>
        <executions>
          <execution>
            <id>copy-dependencies</id>
            <phase>package</phase>
            <goals>
              <goal>copy-dependencies</goal>
            </goals>
            <configuration>
              <outputDirectory>${project.build.directory}/lib</outputDirectory>
              <overWriteReleases>false</overWriteReleases>
              <overWriteSnapshots>false</overWriteSnapshots>
              <overWriteIfNewer>true</overWriteIfNewer>
            </configuration>
          </execution>
        </executions>
      </plugin>
      
      <plugin>
        <groupId>org.codehaus.mojo.webstart</groupId>
        <artifactId>webstart-maven-plugin</artifactId>
        <executions>
          <execution>
            <goals>
              <goal>jnlp</goal> <!-- use jnlp, jnlp-inline or jnlp-single as appropriate -->
            </goals>
          </execution>
        </executions>
        <configuration>
          <!--outputDirectory></outputDirectory--> <!-- not required?? -->

          <!--
          Set to true to exclude all transitive dependencies. Default is false.
          -->
          <excludeTransitive>false</excludeTransitive>

          <!-- The path where the libraries are stored within the jnlp structure. not required. by default the libraries are within the working directory -->
          <libPath>lib</libPath>

          <!-- [optional] transitive dependencies filter - if omitted, all transitive dependencies are included -->
          <dependencies>
            <!-- Note that only groupId and artifactId must be specified here. because of a limitation of the Include/ExcludesArtifactFilter -->
            <includes>
              <include>commons-logging:commons-logging</include>
              <include>commons-cli:commons-cli</include>
              <include>org.jboss.weld.se:weld-se</include>
              <include>com.google.guava:guava</include>
              <include>commons-lang:commons-lang</include>
              <include>commons-beanutils:commons-beanutils</include>
              <include>commons-collections:commons-collections</include>
              <include>commons-io:commons-io</include>
              <include>game-commons:game-commons</include>
              <include>junit:junit</include>
            </includes>
            <!-- excludes>
              <exclude></exclude>
            <excludes-->
          </dependencies>

          <resourcesDirectory>${project.basedir}/src/main/resources</resourcesDirectory>

          <!-- JNLP generation -->
          <jnlp>
            <!-- default values -->
            <!--inputTemplateResourcePath>${project.basedir}</inputTemplateResourcePath-->
            <!--inputTemplate>src/main/jnlp/template.vm</inputTemplate--> <!-- relative to inputTemplateResourcePath -->
            <outputFile>frogger-reincarnation.jnlp</outputFile> <!-- defaults to launch.jnlp -->

            <!-- used to automatically identify the jar containing the main class. -->
            <!-- this is perhaps going to change -->
            <mainClass>org.jboss.weld.environment.se.StartMain</mainClass>
          </jnlp>


          <!-- SIGNING -->
          <!-- defining this will automatically sign the jar and its dependencies, if necessary -->
          <sign>
            <keystore>keystore</keystore>
            <keypass>keypass</keypass>  <!-- we need to override passwords easily from the command line. ${keypass} -->
            <storepass>storepass</storepass> <!-- ${storepass} -->
            <!--storetype>fillme</storetype-->
            <alias>frogger</alias>

            <!--validity>fillme</validity-->

            <!-- only required for generating the keystore -->
            <dnameCn>Kevin</dnameCn>
            <dnameOu>Sapper</dnameOu>
            <dnameO>My Company</dnameO>
            <dnameL>Something L</dnameL>
            <dnameSt>Anything ST</dnameSt>
            <dnameC>What C</dnameC>

            <verify>true</verify> <!-- verify that the signing operation succeeded -->

            <!-- KEYSTORE MANAGEMENT -->
            <keystoreConfig>
              <delete>true</delete> <!-- delete the keystore -->
              <gen>true</gen>       <!-- optional shortcut to generate the store. -->
            </keystoreConfig>
          </sign>

          <!-- BUILDING PROCESS -->

          <pack200>true</pack200>
          <gzip>true</gzip> <!-- default force when pack200 false, true when pack200 selected ?? -->

          <!-- causes a version attribute to be output in each jar resource element, optional, default is false -->
          <outputJarVersions>true</outputJarVersions>

          <!--install>false</install--> <!-- not yet supported -->
          <verbose>true</verbose>

        </configuration>
      </plugin>
    </plugins>
        
    <resources>
      <resource>
        <directory>src/main/resources</directory>
      </resource>
    </resources>
                
  </build>
    
  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
  </properties>

  <dependencies>
    <dependency>
      <groupId>commons-lang</groupId>
      <artifactId>commons-lang</artifactId>
      <version>2.6</version>
    </dependency>
    <dependency>
      <groupId>commons-io</groupId>
      <artifactId>commons-io</artifactId>
      <version>2.1</version>
    </dependency>
    <dependency>
      <groupId>commons-beanutils</groupId>
      <artifactId>commons-beanutils</artifactId>
      <version>1.8.3</version>
    </dependency>
    <dependency>
      <groupId>com.google.guava</groupId>
      <artifactId>guava</artifactId>
      <version>10.0.1</version>
    </dependency>
    <dependency>
      <groupId>org.jboss.weld.se</groupId>
      <artifactId>weld-se</artifactId>
      <version>1.1.4.Final</version>
    </dependency>
    <dependency>
      <groupId>game-commons</groupId>
      <artifactId>game-commons</artifactId>
      <version>1.0-SNAPSHOT</version>
    </dependency>
        <!-- Test dependencies -->
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>4.8.2</version>
      <scope>test</scope>
    </dependency>
        
        
        
    <dependency>
      <groupId>commons-logging</groupId>
      <artifactId>commons-logging</artifactId>
      <version>1.0.4</version>
    </dependency>
    <dependency>
      <groupId>commons-cli</groupId>
      <artifactId>commons-cli</artifactId>
      <version>1.0</version>
    </dependency>
  </dependencies>
</project>
